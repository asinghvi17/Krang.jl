var documenterSearchIndex = {"docs":
[{"location":"api/#Kang-api","page":"Kang api","title":"Kang api","text":"","category":"section"},{"location":"api/","page":"Kang api","title":"Kang api","text":"Pages = [\"api.md\"]","category":"page"},{"location":"api/#Raytracing-Functions","page":"Kang api","title":"Raytracing Functions","text":"","category":"section"},{"location":"api/","page":"Kang api","title":"Kang api","text":"Kang.emission_radius(metric::Kerr{T}, α, β, θs, θo, isindir, n) where T\nKang.emission_radius(metric::Kerr{T}, α, β, τ, θo) where T\nKang.emission_inclination(metric::Kerr{T}, α, β, θo, rs, νr) where T\nKang.emission_inclination(metric::Kerr{T}, α, β, τ, θo) where T\nKang.emission_coordinates_fast_light\nKang.emission_coordinates\nKang.raytrace\nKang.mino_time","category":"page"},{"location":"api/#Kang.emission_radius-Union{Tuple{T}, Tuple{Kerr{T}, Vararg{Any, 6}}} where T","page":"Kang api","title":"Kang.emission_radius","text":"emission_radius(\n    metric::Kerr{T},\n    α,\n    β,\n    θs,\n    θo,\n    isindir,\n    n\n) -> Tuple{Any, Bool, Bool}\n\n\nEmission radius for point originating at inclination θs whose nth order image appears at the screen coordinate (α, β).  Returns NaN if the emission coordinates do not exist for that screen coordinate.\n\nArguments\n\nmetric : Kerr{T} metric \nα : Horizontal Bardeen screen coordinate\nβ : Vertical Bardeen screen coordinate\nθs : Emission inclination\nθo : Observer inclination\nisindir : Is emission to observer direct or indirect\nn : Image index\n\n\n\n\n\n","category":"method"},{"location":"api/#Kang.emission_radius-Union{Tuple{T}, Tuple{Kerr{T}, Vararg{Any, 4}}} where T","page":"Kang api","title":"Kang.emission_radius","text":"emission_radius(\n    metric::Kerr{T},\n    α,\n    β,\n    τ,\n    θo\n) -> Tuple{Any, Any, Any}\n\n\nEmission radius for point originating at at Mino time τ whose image appears at the screen coordinate (α, β).  Returns NaN if the emission coordinates do not exist for that screen coordinate.\n\nArguments\n\n-metric : Kerr{T} metric -α : Horizontal Bardeen screen coordinate -β : Vertical Bardeen screen coordinate -θs : Emission inclination -θo : Observer inclination -isindir : Normalized angular momentum -n : Image index\n\n\n\n\n\n","category":"method"},{"location":"api/#Kang.emission_inclination-Union{Tuple{T}, Tuple{Kerr{T}, Vararg{Any, 5}}} where T","page":"Kang api","title":"Kang.emission_inclination","text":"emission_inclination(\n    metric::Kerr{T},\n    α,\n    β,\n    θo,\n    rs,\n    νr\n) -> NTuple{6, Any}\n\n\nEmission inclination for point originating at inclination rs whose nth order image appears at screen coordinate (α, β).\n\nArguments\n\nmetric : Kerr{T} metric\nα : Horizontal Bardeen Screen Coordinates\nβ : Vertical Bardeen Screen Coordinates\nθo : Observer Inclination\nτ : Mino Time\n\n\n\n\n\n","category":"method"},{"location":"api/#Kang.emission_inclination-Union{Tuple{T}, Tuple{Kerr{T}, Vararg{Any, 4}}} where T","page":"Kang api","title":"Kang.emission_inclination","text":"emission_inclination(\n    metric::Kerr{T},\n    α,\n    β,\n    τ,\n    θo\n) -> NTuple{6, Any}\n\n\nEmission inclination for point at Mino time τ whose image appears at screen coordinate (α, β).\n\nArguments\n\nmetric : Kerr{T} metric\nα : Horizontal Bardeen Screen Coordinates\nβ : Vertical Bardeen Screen Coordinates\nθo : Observer Inclination\nτ : Mino Time\n\n\n\n\n\n","category":"method"},{"location":"api/#Kang.emission_coordinates_fast_light","page":"Kang api","title":"Kang.emission_coordinates_fast_light","text":"emission_coordinates_fast_light(\n    metric::Kerr{T},\n    α,\n    β,\n    θs,\n    θo,\n    isindir,\n    n\n) -> Tuple{Any, Any, Any, Bool, Bool}\n\n\nEmission radius and azimuthal angle for point originating at inclination θs whose nth order image appears at the screen coordinate (α, β).  for an observer located at inclination θo.\n\nArguments\n\nmetric : Kerr{T} metric\nα : Horizontal Bardeen Screen Coordinates\nβ : Vertical Bardeen Screen Coordinates\nθs : Emission Inclination\nθo : Observer Inclination\nisindir : Whether emission to observer is direct or indirect\nn : Image index\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.emission_coordinates","page":"Kang api","title":"Kang.emission_coordinates","text":"emission_coordinates(\n    metric::Kerr{T},\n    α,\n    β,\n    θs,\n    θo,\n    isindir,\n    n\n) -> NTuple{6, Any}\n\n\nEmission radius and azimuthal angle for point originating at inclination θs whose nth order image appears at the screen coordinate (α, β). for an observer located at inclination θo.\n\nArguments\n\nmetric : Kerr{T} metric\nα : Horizontal Bardeen Screen Coordinates\nβ : Vertical Bardeen Screen Coordinates\nθs : Emission Inclination\nθo : Observer Inclination\nisindir : Whether emission to observer is direct or indirect\nn : Image index\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.raytrace","page":"Kang api","title":"Kang.raytrace","text":"raytrace(metric::Kerr{T}, α, β, θo, τ) -> NTuple{6, Any}\n\n\nRaytrace a point that appears at the screen coordinate (α, β) for an observer located at inclination θo\n\nArguments\n\nmetric : Kerr{T} metric\nα : Horizontal Bardeen Screen Coordinates\nβ : Vertical Bardeen Screen Coordinates\nθo : Observer Inclination\nτ : Mino Time\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.mino_time","page":"Kang api","title":"Kang.mino_time","text":"mino_time(metric::Kerr{T}, α, β, θs, θo, isindir, n) -> Any\n\n\nMino time of trajectory between two inclinations for a given screen coordinate\n\nArguments\n\nα : Horizontal Bardeen screen coordinate\nβ : Vertical Bardeen screen coordinate \na : Blackhole angular Momentum\nθs : Emission inclination\nθo : Observer inclination\nisindir : Is the path direct or indirect?\nn : nth image in orde of amount of minotime traversed\n\n\n\n\n\n","category":"function"},{"location":"api/#Metric-Functions","page":"Kang api","title":"Metric Functions","text":"","category":"section"},{"location":"api/","page":"Kang api","title":"Kang api","text":"Kang.AbstractMetric\nKang.Kerr\nKang.metric_uu\nKang.metric_dd\nKang.horizon","category":"page"},{"location":"api/#Kang.AbstractMetric","page":"Kang api","title":"Kang.AbstractMetric","text":"abstract type AbstractMetric\n\nAbstract Metric Type\n\n\n\n\n\n","category":"type"},{"location":"api/#Kang.Kerr","page":"Kang api","title":"Kang.Kerr","text":"struct Kerr{T} <: Kang.AbstractMetric\n\nKerr Metric in Boyer Lindquist Coordinates\n\nmass: M = mass\nspin: a = J/M, where J is the angular momentum and M is the mass of the blackhole.\n\n\n\n\n\n","category":"type"},{"location":"api/#Kang.metric_uu","page":"Kang api","title":"Kang.metric_uu","text":"metric_uu(metric::Kang.AbstractMetric, args...) -> Any\n\n\nReturns the inverse metric in some representation (usually as an nxn matrix).\n\n\n\n\n\nmetric_uu(metric::Kerr{T}, r, θ) -> Any\n\n\nInverse Kerr metric in Boyer Lindquist (BL) coordinates.\n\n\n\n\n\nmetric_uu(metric::Kerr{T}, coordinates) -> Any\n\n\nInverse Kerr metric in Boyer Lindquist (BL) coordinates.\n\nArguments\n\nmetric : Kerr metric\ncoordinates : Coordinates (t, r, θ, ϕ)\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.metric_dd","page":"Kang api","title":"Kang.metric_dd","text":"metric_dd(metric::Kang.AbstractMetric, args...) -> Any\n\n\nReturns the metric in some representation (usually as an nxn matrix).\n\n\n\n\n\nmetric_dd(metric::Kerr{T}, r, θ) -> Any\n\n\nInverse Kerr metric in Boyer Lindquist (BL) coordinates.\n\n\n\n\n\nmetric_dd(metric::Kerr{T}, coordinates) -> Any\n\n\nKerr metric in Boyer Lindquist (BL) coordinates.\n\nArguments\n\nmetric : Kerr metric\ncoordinates : Coordinates (t, r, θ, ϕ)\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.horizon","page":"Kang api","title":"Kang.horizon","text":"horizon(metric::Kerr{T}) -> Any\n\n\nOuter Horizon for the Kerr metric.\n\n\n\n\n\n","category":"function"},{"location":"api/","page":"Kang api","title":"Kang api","text":"Kang.λ\nKang.η","category":"page"},{"location":"api/#Kang.λ","page":"Kang api","title":"Kang.λ","text":"λ(_::Kerr, α, θo) -> Any\n\n\nEnergy reduced azimuthal angular momentum\n\nArguments\n\nmetric: Kerr\nα: Horizontal Bardeen screen coordinate\nθo: Observer inclination\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.η","page":"Kang api","title":"Kang.η","text":"η(metric::Kerr, α, β, θo) -> Any\n\n\nEnergy reduced Carter integral\n\nArguments\n\nmetric: Kerr\nα: Horizontal Bardeen screen coordinate\nβ: Bardeen vertical coordinate\nθo: Observer inclination\n\n\n\n\n\n","category":"function"},{"location":"api/#Radial-Integrals","page":"Kang api","title":"Radial Integrals","text":"","category":"section"},{"location":"api/","page":"Kang api","title":"Kang api","text":"Kang.r_potential\nKang.get_radial_roots\nKang.Ir(metric::Kerr, νr::Bool, θo, rs, α, β)\nKang.Ir(metric::Kerr{T}, νr::Bool, rs, η, λ) where T\nKang.radial_integrals_case2\nKang.radial_integrals_case3\nKang.radial_integrals_case4","category":"page"},{"location":"api/#Kang.r_potential","page":"Kang api","title":"Kang.r_potential","text":"r_potential(metric::Kerr{T}, η, λ, r) -> Any\n\n\nRadial potential of spacetime\n\nArguments\n\nmetric: Kerr{T} metric\nη  : Reduced Carter constant\nλ  : Reduced azimuthal angular momentum\nr  : Boyer Lindquist radius\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.get_radial_roots","page":"Kang api","title":"Kang.get_radial_roots","text":"get_radial_roots(metric::Kerr{T}, η, λ) -> NTuple{4, Any}\n\n\nReturns roots of r^4 + (a^2-η-λ^2)r^2 + 2(η+(a-λ)^2)r - a^2η\n\nArguments\n\nmetric: Kerr{T} metric\nη  : Reduced Carter constant\nλ  : Reduced azimuthal angular momentum\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.Ir-Tuple{Kerr, Bool, Vararg{Any, 4}}","page":"Kang api","title":"Kang.Ir","text":"Ir(metric::Kerr, νr::Bool, θo, rs, α, β) -> Any\n\n\nReturns the antiderivative I_r=intfracdrsqrtmathcalR(r). See r_potential(x) for an implementation of mathcalR(r).\n\nArguments\n\nmetric: Kerr{T} metric\nνr : Sign of radial velocity direction at emission. This is always positive for case 3 and case 4 geodesics.\nθo : Observer inclination\nα  : Horizontal Bardeen screen coordinate\nβ  : Vertical Bardeen screen coordinate\n\n\n\n\n\n","category":"method"},{"location":"api/#Kang.Ir-Union{Tuple{T}, Tuple{Kerr{T}, Bool, Any, Any, Any}} where T","page":"Kang api","title":"Kang.Ir","text":"Ir(metric::Kerr{T}, νr::Bool, rs, η, λ) -> Any\n\n\nReturns the antiderivative I_r=intfracdrsqrtmathcalR(r). See r_potential(x) for an implementation of mathcalR(r).\n\nArguments\n\nmetric: Kerr{T} metric\nνr : Sign of radial velocity direction at emission. This is always positive for case 3 and case 4 geodesics.\nθo : Observer inclination\nη  : Reduced Carter Constant\nλ  : Reduced Azimuthal Angular Momentum\n\n\n\n\n\n","category":"method"},{"location":"api/#Kang.radial_integrals_case2","page":"Kang api","title":"Kang.radial_integrals_case2","text":"radial_integrals_case2(\n    metric::Kerr{T},\n    rs,\n    roots::NTuple{4, T} where T,\n    τ,\n    νr\n) -> NTuple{5, Any}\n\n\nReturns the radial integrals for the case where there are four real roots in the radial potential, with roots outside the horizon.\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.radial_integrals_case3","page":"Kang api","title":"Kang.radial_integrals_case3","text":"radial_integrals_case3(\n    metric::Kerr{T},\n    rs,\n    roots::NTuple{4, T} where T,\n    τ\n) -> NTuple{5, Any}\n\n\nReturns the radial integrals for the case where there are two real roots in the radial potential\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.radial_integrals_case4","page":"Kang api","title":"Kang.radial_integrals_case4","text":"radial_integrals_case4(\n    metric::Kerr{T},\n    rs,\n    roots::NTuple{4, T} where T,\n    τ\n) -> Tuple\n\n\nReturns the radial integrals for the case where there are no real roots in the radial potential\n\n\n\n\n\n","category":"function"},{"location":"api/#Angular-Integrals","page":"Kang api","title":"Angular Integrals","text":"","category":"section"},{"location":"api/","page":"Kang api","title":"Kang api","text":"Kang.θ_potential\nKang.Gθ","category":"page"},{"location":"api/#Kang.θ_potential","page":"Kang api","title":"Kang.θ_potential","text":"θ_potential(metric::Kerr{T}, η, λ, θ) -> Any\n\n\nTheta potential of a Kerr blackhole\n\nArguments\n\nmetric: Kerr{T} metric\nη  : Reduced Carter constant\nλ  : Reduced azimuthal angular momentum\nθ  : Boyer Lindquist inclination\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.Gθ","page":"Kang api","title":"Kang.Gθ","text":"Gθ(\n    metric::Kerr{T},\n    α,\n    β,\n    θs,\n    θo,\n    isindir,\n    n\n) -> NTuple{5, Any}\n\n\nReturns the antiderivative G_theta=intfracdthetasqrtTheta(theta). See θ_potential(x) for an implementation of Theta(\theta).\n\nArguments\n\nmetric: Kerr{T} metric\nα : Horizontal Bardeen screen coordinate\nβ : Vertical Bardeen screen coordinate\nθs : Emission inclination\nθo : Observer inclination\nisindir : Is the path direct or indirect?\nn : nth image ordered by minotime\n\n\n\n\n\n","category":"function"},{"location":"api/#Screen-Coordinates","page":"Kang api","title":"Screen Coordinates","text":"","category":"section"},{"location":"api/","page":"Kang api","title":"Kang api","text":"Kang.α\nKang.β\nKang.αboundary\nKang.βboundary","category":"page"},{"location":"api/#Kang.α","page":"Kang api","title":"Kang.α","text":"α(_::Kerr, λ, θo) -> Any\n\n\nHorizontal Bardeen Screen Coordinate\n\nArguments\n\nmetric: Kerr\nα: Horizontal Bardeen screen coordinate\nθo: Observer inclination\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.β","page":"Kang api","title":"Kang.β","text":"β(metric::Kerr, λ, η, θo) -> Any\n\n\nHorizontal Bardeen Screen Coordinate\n\nArguments\n\nmetric: Kerr\nλ: Energy reduced Azimuthal angular momentul\nη: Energy reduced Carter integral \nθo: Observer inclination\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.αboundary","page":"Kang api","title":"Kang.αboundary","text":"αboundary(metric::Kerr, θs) -> Any\n\n\nDefines a horizontal boundary on the assmyptotic observers screen where emission that originates from θs must fall within.\n\nArguments\n\nmetric: Kerr metric\nθs  : Emission Inclination\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.βboundary","page":"Kang api","title":"Kang.βboundary","text":"βboundary(metric::Kerr{T}, α, θo, θs) -> Any\n\n\nDefines a vertical boundary on the Assyptotic observers screen where emission that originates from θs must fall within.\n\nArguments\n\nmetric: Kerr{T} metric\nα   : Horizontal Bardeen screen coordinate\nθo  : Observer inclination\nθs  : Emission Inclination\n\n\n\n\n\n","category":"function"},{"location":"api/#Polarization-Functions","page":"Kang api","title":"Polarization Functions","text":"","category":"section"},{"location":"api/","page":"Kang api","title":"Kang api","text":"Kang.p_bl_d\nKang.jac_bl_u_zamo_d\nKang.jac_zamo_u_bl_d\nKang.jac_bl_d_zamo_u\nKang.jac_zamo_d_bl_u\nKang.jac_fluid_u_zamo_d\nKang.screen_polarisation\nKang.penrose_walker\nKang.calcPol","category":"page"},{"location":"api/#Kang.p_bl_d","page":"Kang api","title":"Kang.p_bl_d","text":"p_bl_d(metric::Kerr{T}, r, θ, η, λ, νr, νθ) -> Any\n\n\nReturns the momentum form in the Boyer-Lindquist basis.\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.jac_bl_u_zamo_d","page":"Kang api","title":"Kang.jac_bl_u_zamo_d","text":"jac_bl_u_zamo_d(metric::Kerr{T}, r, θ) -> Any\n\n\nJacobian which converts ZAMO vector to a Boyer-Lindquist basis\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.jac_zamo_u_bl_d","page":"Kang api","title":"Kang.jac_zamo_u_bl_d","text":"jac_zamo_u_bl_d(metric::Kerr{T}, r, θ) -> Any\n\n\nJacobian which converts Boyer-Lindquist vector to a ZAMO basis\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.jac_bl_d_zamo_u","page":"Kang api","title":"Kang.jac_bl_d_zamo_u","text":"jac_bl_d_zamo_u(metric::Kerr{T}, r, θ) -> Any\n\n\nJacobian which converts ZAMO covector to a Boyer-Lindquist basis\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.jac_zamo_d_bl_u","page":"Kang api","title":"Kang.jac_zamo_d_bl_u","text":"jac_zamo_d_bl_u(metric::Kerr{T}, r, θ) -> Any\n\n\nReturns the Jacobian which converts a Boyer-Lindquist covector to ZAMO basis.\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.jac_fluid_u_zamo_d","page":"Kang api","title":"Kang.jac_fluid_u_zamo_d","text":"jac_fluid_u_zamo_d(_::Kerr{T}, β, θ, φ) -> Any\n\n\nJacobian which expreases ZAMO vector in the fluid frame\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.screen_polarisation","page":"Kang api","title":"Kang.screen_polarisation","text":"screen_polarisation(\n    metric::Kerr{T},\n    κ::Complex,\n    θ,\n    α,\n    β\n) -> Tuple{Any, Any}\n\n\nReturns the screen polarization associated with a killing spinor κ as seen seen by an assymptotic observer.\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.penrose_walker","page":"Kang api","title":"Kang.penrose_walker","text":"penrose_walker(\n    metric::Kerr{T},\n    r,\n    θ,\n    p_u::AbstractVector,\n    f_u::AbstractVector\n) -> Tuple{Any, Any}\n\n\nReturns the Penrose walker constant for a photon with momentum pu emitted from a fluid particle with momentum fu.\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.calcPol","page":"Kang api","title":"Kang.calcPol","text":"calcPol(\n    metric::Kerr{T},\n    α,\n    β,\n    ri,\n    θs,\n    θo,\n    magfield::StaticArraysCore.SArray{Tuple{3}, T, 1, 3},\n    βfluid::StaticArraysCore.SArray{Tuple{3}, T, 1, 3},\n    νr::Bool,\n    θsign::Bool\n) -> NTuple{4, Any}\n\n\nCalculates the polarization of a photon emitted from a fluid particle with momentum f_u and observed by an asymptotic observer.\n\n\n\n\n\n","category":"function"},{"location":"api/#Misc","page":"Kang api","title":"Misc","text":"","category":"section"},{"location":"api/","page":"Kang api","title":"Kang api","text":"Kang._isreal2\nKang.regularized_Pi","category":"page"},{"location":"api/#Kang._isreal2","page":"Kang api","title":"Kang._isreal2","text":"_isreal2(num::Complex{T}) -> Any\n\n\nChecks if a complex number is real to some tolerance\n\n\n\n\n\n","category":"function"},{"location":"api/#Kang.regularized_Pi","page":"Kang api","title":"Kang.regularized_Pi","text":"regularized_Pi(n, ϕ, k) -> Any\n\n\nRegularized elliptic integral of the third kind\n\nArguments\n\nn: Parameter\nϕ: Arguments\nk: Parameter\n\n\n\n\n\n","category":"function"},{"location":"polarization/#Linear-Polarization","page":"Linear-Polarization","title":"Linear-Polarization","text":"","category":"section"},{"location":"polarization/","page":"Linear-Polarization","title":"Linear-Polarization","text":"The existence of the Penrose-Walker constant makes linear polarization directly derivable from a conserved quantity in Kerr spacetimes.","category":"page"},{"location":"examples/coordinate_contours/","page":"Raytracing with inclination","title":"Raytracing with inclination","text":"EditURL = \"../../../examples/coordinate_contours.jl\"","category":"page"},{"location":"examples/coordinate_contours/#Raytracing-with-inclination","page":"Raytracing with inclination","title":"Raytracing with inclination","text":"","category":"section"},{"location":"examples/coordinate_contours/","page":"Raytracing with inclination","title":"Raytracing with inclination","text":"In this example, we will raytrace the region around a Kerr blackhole as seen by an observer stationed at infinity. We will show the emission coordinates of the n=0 (direct) and n=1 (indirect) photons as they are emitted from the source, at a fixed inclination angle from the blackhole's spin axis.","category":"page"},{"location":"examples/coordinate_contours/","page":"Raytracing with inclination","title":"Raytracing with inclination","text":"First, let's import Kang and CairoMakie for plotting.","category":"page"},{"location":"examples/coordinate_contours/","page":"Raytracing with inclination","title":"Raytracing with inclination","text":"using CairoMakie\nusing Kang","category":"page"},{"location":"examples/coordinate_contours/","page":"Raytracing with inclination","title":"Raytracing with inclination","text":"We will use a 0.99 spin Kerr blackhole viewed by an assymptotic observer at an inclination angle of θo=π/4. A region spanned by radii between the horizon and 20M at varying inclinations will be raytraced onto the 20Mx20M screen of the observer.","category":"page"},{"location":"examples/coordinate_contours/","page":"Raytracing with inclination","title":"Raytracing with inclination","text":"model = Kang.Kerr(0.99);\nθo = π/4;\nsze = 500;\nrmin = Kang.horizon(model)\nrmax = 20;\nρmax = 20;\nnothing #hide","category":"page"},{"location":"examples/coordinate_contours/","page":"Raytracing with inclination","title":"Raytracing with inclination","text":"Let us now create a figure to plot the emission coordinates on,","category":"page"},{"location":"examples/coordinate_contours/","page":"Raytracing with inclination","title":"Raytracing with inclination","text":"fig = Figure(resolution=(600, 600), fontfamily=\"Computer Modern\", fontface=\"bold\");\nnothing #hide","category":"page"},{"location":"examples/coordinate_contours/","page":"Raytracing with inclination","title":"Raytracing with inclination","text":"and use this figure make an animation by looping over the inclination angle θs. This loop will plot the emission coordinates for each θs.","category":"page"},{"location":"examples/coordinate_contours/","page":"Raytracing with inclination","title":"Raytracing with inclination","text":"recording = record(fig, \"emission_coordinates.gif\", range(0,π,length=180),framerate=15) do θs\n    empty!(fig);\n\n    αvals = range(-ρmax, ρmax, length=sze);\n    βvals = range(-ρmax, ρmax, length=sze);\n    tvals = -Inf.*ones(sze, sze);\n    rvals = -Inf.*ones(sze, sze);\n    θvals = -Inf.*ones(sze, sze);\n    ϕvals = -Inf.*ones(sze, sze);\n\n    n = 1;\n    Threads.@threads for i in 1:sze\n        for j in 1:sze\n            curr_ts, curr_rs, curr_θs, curr_ϕs, νr, νθ = Kang.emission_coordinates(model, αvals[i], βvals[j], θs, θo, true, n);\n            tvals[i, j] = (rmax > curr_rs > rmin) ? curr_ts : tvals[i, j];\n            rvals[i, j] = (rmax > curr_rs > rmin) ? curr_rs : rvals[i, j];\n            θvals[i, j] = (rmax > curr_rs > rmin) ? curr_θs : θvals[i, j];\n            ϕvals[i, j] = (rmax > curr_rs > rmin) ? curr_ϕs : ϕvals[i, j];\n\n            curr_ts, curr_rs, curr_θs, curr_ϕs, νr, νθ = Kang.emission_coordinates(model, αvals[i], βvals[j], θs, θo, false, n);\n            tvals[i, j] = (rmax > curr_rs > rmin && curr_ts != 0) ? curr_ts : tvals[i, j];\n            rvals[i, j] = (rmax > curr_rs > rmin && curr_rs > 0) ? curr_rs : rvals[i, j];\n            θvals[i, j] = (rmax > curr_rs > rmin && curr_θs > 0) ? curr_θs : θvals[i, j];\n            ϕvals[i, j] = (rmax > curr_rs > rmin && curr_ϕs > 0) ? curr_ϕs : ϕvals[i, j];\n        end\n    end\n\n    n = 0;\n    Threads.@threads for i in 1:sze\n        for j in 1:sze\n            curr_ts, curr_rs, curr_θs, curr_ϕs, νr, νθ = Kang.emission_coordinates(model, αvals[i], βvals[j], θs, θo, true, n);\n            tvals[i, j] = (rmax > curr_rs > rmin) ? curr_ts : tvals[i, j];\n            rvals[i, j] = (rmax > curr_rs > rmin) ? curr_rs : rvals[i, j];\n            θvals[i, j] = (rmax > curr_rs > rmin) ? curr_θs : θvals[i, j];\n            ϕvals[i, j] = (rmax > curr_rs > rmin) ? curr_ϕs : ϕvals[i, j];\n            curr_ts, curr_rs, curr_θs, curr_ϕs, νr, νθ = Kang.emission_coordinates(model, αvals[i], βvals[j], θs, θo, false, n);\n            tvals[i, j] = (rmax > curr_rs > rmin && curr_ts != 0) ? curr_ts : tvals[i, j];\n            rvals[i, j] = (rmax > curr_rs > rmin && curr_rs > 0) ? curr_rs : rvals[i, j];\n            θvals[i, j] = (rmax > curr_rs > rmin && curr_θs > 0) ? curr_θs : θvals[i, j];\n            ϕvals[i, j] = (rmax > curr_rs > rmin && curr_ϕs > 0) ? curr_ϕs : ϕvals[i, j];\n        end\n    end\n\n    ax0 = Axis(fig[1, 1], aspect=1, title=L\"\\text{Regularized Time }(t_s)\");\n    ax1 = Axis(fig[1, 3], aspect=1, title=L\"\\text{Radius }(r_s)\");\n    ax2 = Axis(fig[2, 1], aspect=1, title=L\"\\text{Opening angle } (\\theta_s)\");\n    ax3 = Axis(fig[2, 3], aspect=1, title=L\"\\text{Azimuth } (\\phi_s)\");\n\n    hm0 = CairoMakie.heatmap!(ax0, αvals, βvals, tvals, colormap=:afmhot, colorrange=(-100,100));\n    cb0 = Colorbar(fig[1, 2], hm0);\n    hm1 = CairoMakie.heatmap!(ax1, αvals, βvals, rvals, colormap=:afmhot, colorrange=(0,20));\n    cb1 = Colorbar(fig[1, 4], hm1);\n    hm2 = CairoMakie.heatmap!(ax2, αvals, βvals, θvals, colormap=:afmhot, colorrange=(0,π));\n    cb2 = Colorbar(fig[2, 2], hm2);\n    hm3 = CairoMakie.heatmap!(ax3, αvals, βvals, ϕvals, colormap=:afmhot, colorrange=(0,2π));\n    cb3 = Colorbar(fig[2, 4], hm3);\n\n    ax4 = Axis(\n        fig[3, 1:3],\n        leftspinevisible=false,\n        rightspinevisible=false,\n        topspinevisible=false,\n        bottomspinevisible=false,\n        height=60,\n    );\n    hidedecorations!(ax4);\n    CairoMakie.text!(ax4, L\"θ_s=%$(Int(floor(θs*180/π)))^\\circ\", fontsize=30);\nend","category":"page"},{"location":"examples/coordinate_contours/","page":"Raytracing with inclination","title":"Raytracing with inclination","text":"(Image: image)","category":"page"},{"location":"examples/coordinate_contours/","page":"Raytracing with inclination","title":"Raytracing with inclination","text":"","category":"page"},{"location":"examples/coordinate_contours/","page":"Raytracing with inclination","title":"Raytracing with inclination","text":"This page was generated using Literate.jl.","category":"page"},{"location":"getting_started/#Raytracing","page":"Getting Started","title":"Raytracing","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Light rays in this module can be parameterized in terms of either the cones (theta_s), or the minotime (Deltatau).","category":"page"},{"location":"getting_started/#Raytracing-conical-surfaces-(\\theta_s)","page":"Getting Started","title":"Raytracing conical surfaces (theta_s)","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"Surfaces of constant theta define spin axis centered cones whose apex lie at the origin of the coordinate system.","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: raytracing conical surfaces)","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"<p style=\"text-align:center\">n=0 and n=1 images of emission coordinates originating from conical surfaces.</p>","category":"page"},{"location":"getting_started/#Raytracing-with-rays-parameterized-by-Mino-time-(\\Delta\\tau)","page":"Getting Started","title":"Raytracing with rays parameterized by Mino time (Deltatau)","text":"","category":"section"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"(Image: raytracing with Mino time)","category":"page"},{"location":"getting_started/","page":"Getting Started","title":"Getting Started","text":"<p style=\"text-align:center\">Coordinate evolution with Mino time.</p>","category":"page"},{"location":"kerr_geodesic_summary/#The-Geodesics-of-the-Kerr-Metric","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"","category":"section"},{"location":"kerr_geodesic_summary/#Geodesic-Equations","page":"The Geodesics of the Kerr Metric","title":"Geodesic Equations","text":"","category":"section"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"Geodesics are extremal solutions to the local optimization problem of the action:","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"beginequation\nS = int_tildetau_i^tildetau_f dtildetausqrt-g_munudot x^mu dot x^nu\nendequation","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"defined on a manifold with metric g_munu, which in the case of the Kerr, can be written in Boyer-Lindquist coordinates[BL] as:","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"beginequation\ng_munu=left(\nbeginarraycccc\n fracr_s rSigma -1  0  0  -fraca^2   r_s rsin ^2thetaSigma  \n 0  fracSigma Delta   0  0 \n 0  0  Sigma   0 \n -fraca^2 r  r_ssin ^2theta Sigma   0  0  sin ^2theta  left(fraca^2\n    r_s rsin ^2theta Sigma +a^2+r^2right) \nendarray\nright)\nendequation","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"where Sigma = r^2 +a^2cos(theta)^2 and Delta=r^2- r_s r+a^2.  In general, geodesics are constrained to satisfy the geodesic equations,","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"beginequation\nfracd^2x^mudtildetau^2 =-Gamma^mu_alphabetadot x^alpha dot x^beta\nendequation","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"where,","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"beginequation\nGamma^mu_alphabeta = frac12g^munu(g_alphanu beta + g_betanu alpha - g_alphabeta nu)\nendequation","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"are the Christoffel symbols.","category":"page"},{"location":"kerr_geodesic_summary/#Hamilton-Jacobi-Equations","page":"The Geodesics of the Kerr Metric","title":"Hamilton-Jacobi Equations","text":"","category":"section"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"The Kerr family of metrics belongs to the class of type-D (type-{2,2}) spacetimes. These spacetimes admit a Killing-Yano tensor [PW] from which it is possible to define a Carter constant and Penrose-Walker constant.  The Carter constant, in particular, allows solutions of the geodesic equations to be expressed in terms of quadratures through the Hamilton-Jacobi approach[Carter], whose equations are given by:","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"beginalign\nH\n    =frac12g^munup_mup_nu\nK\n    =fracpartial Spartial tildetau + Hleft(x fracpartial Spartial x tildetauright)=0\np_mu\n    =fracpartial Spartial x^mu\nendalign","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"The Carter constant is useful since it lets the Hamilton-Jacobi equations be seperable, resulting in a Hamiltonian principle function that takes the form,","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"beginequation\nS =  int fracsqrtmathcal RDeltadr + intsqrtTheta dtheta-Et +Lphi+ frac12kappatildetau\nendequation","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"where kappa is the conserved four momentum magnitude, E is the conserved energy, L is the conserved azimuthal angular momentum, and","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"beginalign\nmathcal R\n    =Delta-C+kappa r - (L-aE)^2+E(r^2+a^2)-La^2\nTheta\n    =C+cos^2thetaleft((kappa+E^2)a^2-fracL^2sin^2thetaright)\nendalign","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"are the radial and inclination potentials that depend on the previously mentioned conserved quantities along with the Carter constant C.","category":"page"},{"location":"kerr_geodesic_summary/#Integral-solutions","page":"The Geodesics of the Kerr Metric","title":"Integral solutions","text":"","category":"section"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"A noteworthy fact is that null geodesics, kappa=0, only depend on the reduced Carter constant and angular momentum","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"beginalign\n    lambda\n        =fracLE\n    eta\n        =fracCE^2\nendalign","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"We use this freedom to fix E=1 and write the  radial and inclination potentials for null geodesics as,","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"beginalign\nmathcal R\n    =-Deltaeta + (lambda-a)^2+(r^2+a^2)-lambda a^2\nTheta\n    =eta+cos^2thetaleft(a^2-fraclambda^2sin^2thetaright)\nendalign","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"The Hamilton-Jacobi Equations then reduce to four first order differential equations: ","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"beginalign\nfracSigmaEdot r\n    = sqrtmathcal R\nfracSigmaEdot theta\n    = sqrtTheta\nfracSigmaEdot phi\n    = fracaDelta(r^2+a^2-alambda)+fraclambdasin^2theta-a\nfracSigmaEdot t\n    = fracr^2+a^2Delta(r^2+a^2-alambda)+a(lambda-asin^2theta)\n\nendalign","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"a fact which follows from the relationship, dot x^mu=p^mu=g^munupartial_nu S. Equations (15)-(18) define a 'Kepler-like' problem where a new parameter, known as the Mino time tau, is defined in terms of an integral in r or theta, and acts similar to the Keplerian coordinate time in that problem. The Mino time is defined by its relationship to the affine parameter by dtau=dtildetauSigma. Furthermore, Equations (15) and (16) imply that the Mino time can be written as a function of r or theta through the relationships,","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"beginalign\ntau=tau_r(r_fr_i)\n    =ointsqrtRdrtext and\ntau=tau_theta(theta_ftheta_i)\n    =ointsqrtThetadtheta\nendalign","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"These equations are useful since tau_theta and tau_r can be inverted to write,","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"beginalign\ntheta_i\n    =tau_theta^-1(tautheta_f)\nr_i\n    =tau_r^-1(taur_f)\n\nendalign","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"Thus for a given t_f r_f theta_f phi_f lambda and eta, one can choose to parameterize the solutions of equations (15)-(18) by either Deltataur_i or theta_i.","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"More details on this formalism and the solutions can be found in this review artivle by Gralla & Lupsasca[GL]","category":"page"},{"location":"kerr_geodesic_summary/#References","page":"The Geodesics of the Kerr Metric","title":"References","text":"","category":"section"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"[PW]: Walker, M., Penrose, R. On quadratic first integrals of the geodesic equations for type {22} spacetimes. Commun.Math. Phys. 18, 265–274 (1970).","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"[Carter]: Brandon Carter Phys. Rev. 174, 1559 – Published 25 October 1968","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"[BL]: Robert H. Boyer, Richard W. Lindquist; Maximal Analytic Extension of the Kerr Metric. J. Math. Phys. 1 February 1967; 8 (2): 265–281.","category":"page"},{"location":"kerr_geodesic_summary/","page":"The Geodesics of the Kerr Metric","title":"The Geodesics of the Kerr Metric","text":"[GL]: Samuel E. Gralla and Alexandru Lupsasca Phys. Rev. D 101, 044032","category":"page"},{"location":"time_regularization/#Regularized-time","page":"Regularized time","title":"Regularized time","text":"","category":"section"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"The Kerr spacetime admits a unique Killing vector field, xi^t, that is timelike at r=infty, and whose integral curves serve as a natural time coordinate for observers sitting far away from the blackhole. This is the typical time coordinate used for the Kerr when expressed in Boyer-Lindquist form.","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"It is then possible to calculate the total coordinate time elapsed time over the trajectory of any null geodesic gamma(rtheta) as,","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"beginalign\n    Delta t\n        = Delta I_t+a^2Delta G_t\nendalign","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"where,","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"beginalign\n    Delta I_t(r_or_s)\n        = I_t(r_o) - I_t(r_s)\n        =int\n    _r_s^r_ofracr^2Delta(r)+2Mr(r^2+a^2-alambda)Delta(r)sqrtmathcal R(r)dr\n    Delta G_t(theta_o theta_s)\n        =G_t(theta_o)-G_t(theta_s)\n        =int_theta_s^theta_ofraccos^2thetasqrtTheta(theta)dtheta\n    Delta(r)\n        =r^2-2Mr+a^2\n    mathcal R(r)\n        = (r^2+a^2-alambda)^2-Delta(r)eta+(lambda-a)^2 text and\n    Theta(theta)\n        =eta+a^2cos^2theta-lambda^2cot^stheta\nendalign","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"One idiosyncracy of this coordinate is that it introduces ambiguities when evaluating the elapsed time of any geodesic terminating at the assymptotic observer. The ambiguity is due to logarithmic and linear divergences in the integral I_t at r_o=infty which take the form,[CAZ]","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"beginalign\n    lim_rrightarrowinfty fracdtdrapprox frac2Mr+1\nendalign","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"These divergences are indepedent of the nature of the geodesicas.","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"One way around these ambiguities is for the observer to ask questions that have a regulating effect on the divergences. An example of a valid question is; \"what is the relative time delay of the arival of a photon, i, with respect to a reference photon, j\";","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"beginalign\n    t_i-t_j\n        =Delta t_i - Delta t_j + t_si - t_sj\nendalign","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"where t_si and t_sj are the emission times of photons i and j respectively. ","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"Another approch is to avoid the divergent quality of I_t altogether by introducing a regularized version of the integral, tilde I_t, defined as;","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"beginalign\n    Delta tilde I_t(r_sinfty)\n        =lim_r_orightarrowinfty int_r_s^r_ofracdtdrdr-2Mlogleft(r_o e^fracr_o2Mright)\nendalign","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"The definition of this integral is possible in practice since $ I_t$ takes the forms of the sums of Elliptic Integrals of the first (F), second (E) and third (Pi) kind, as well as logarithms and linear functions of r.","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"beginalign\n    I_t(rrightarrowinfty)\n        simeq _1 F(phi(r)mid k) + _2E(phi(r)mid k)+ _3Pi(nphi(r)mid k) + _4log(_5 r^2) + r + _6\nendalign","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"Some of the logarithmic divergence resides in the contribution from the Elliptic Integral of the third kind; a fact which follows from the logarithmic divergence of Pi(nphik) as nrightarrow csc^2phi. This divergence can be extracted with the connection formula,[DLMF]","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"Pileft(alpha^2phimid kright)+Pileft(omega^2 phimid kright)=Fleft(\nphimid kright)+sqrtcR_Cleft((c-1)(c-k)(c-alpha^2)(c-omega^2)\nright)","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"where,","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"alpha^2omega^2=ktext and c=csc^2phi","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"and","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"    R_c(xy)=frac1sqrtx-ylogleftlvertfracsqrtx + sqrtx-ysqrtyrightrvert","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"Our convention here differs from [DLMF] to be consistent with [GL]. The two are related by,","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"beginalign\n F(phi  sqrtk)\n    =Fleft(phi mid kright)text \nE(phi sqrtk)\n    =Eleft(phi mid kright)text and \nPi(phi n sqrtk)\n    =Pileft(nphi mid kright)\nendalign","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"Thus, our regularized time takes the form ","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"beginalign\n    Delta tilde I_t(r_sinfty)\n        =tilde I_t(infty) - tilde I_t(r_s)\nendalign","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"with tilde I_t(r_s)=I_t(r_s) for finite r_s and,","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"beginalign\n    Delta tilde I_t(infty)\n        = _1 F(phimid k) + _2E(phimid k)+ _3tildePi(nphimid k) + tilde_4log(tilde_5) + _6\nendalign","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"where we have used the connection formula to define a regularized Elliptic integral of the third kind by,","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"tilde Pi(alpha^2 phimid k)\n    =F(phimid k) - Pi(omega^2 phimid k)","category":"page"},{"location":"time_regularization/#References","page":"Regularized time","title":"References","text":"","category":"section"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"[CAZ]: Alejandro Cárdenas-Avendaño, Alexandru Lupsasca, and Hengrui Zhu Phys. Rev. D 107, 043030 – Published 22 February 2023","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"[DLMF]: NIST Digital Library of Mathematical Functions. https://dlmf.nist.gov/, Release 1.1.11 of 2023-09-15. F. W. J. Olver, A. B. Olde Daalhuis, D. W. Lozier, B. I. Schneider, R. F. Boisvert, C. W. Clark, B. R. Miller, B. V. Saunders, H. S. Cohl, and M. A. McClain, eds.","category":"page"},{"location":"time_regularization/","page":"Regularized time","title":"Regularized time","text":"[GL]: Samuel E. Gralla and Alexandru Lupsasca Phys. Rev. D 101, 044032","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Kang","category":"page"},{"location":"#Kang","page":"Home","title":"Kang","text":"","category":"section"},{"location":"#Pages","page":"Home","title":"Pages","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"    Pages=[\n        \"Home\" => \"index.md\",\n        \"Getting Started\" =>[\n            \"getting_started.md\",\n            \"kerr_geodesic_summary.md\",\n            \"polarization.md\",\n            \"time_regularization.md\",\n            ],\n        \"Examples\" => MD_FILES,\n        \"Theory\" => \"kerr_geodesic_summary.md\",\n        \"api.md\",\n    ],","category":"page"},{"location":"examples/raytrace/","page":"Raytracing with Minotime","title":"Raytracing with Minotime","text":"EditURL = \"../../../examples/raytrace.jl\"","category":"page"},{"location":"examples/raytrace/#Raytracing-with-Minotime","page":"Raytracing with Minotime","title":"Raytracing with Minotime","text":"","category":"section"},{"location":"examples/raytrace/#Coordinate-evolution-as-a-function-of-τ.","page":"Raytracing with Minotime","title":"Coordinate evolution as a function of τ.","text":"","category":"section"},{"location":"examples/raytrace/","page":"Raytracing with Minotime","title":"Raytracing with Minotime","text":"using CairoMakie\nusing Kang\n\nmodel = Kang.Kerr(0.99);\nθo = π/4;\nsze = 500;\nrmin = Kang.horizon(model)\nrmax = 20;\nρmax = 20;\nnothing #hide","category":"page"},{"location":"examples/raytrace/","page":"Raytracing with Minotime","title":"Raytracing with Minotime","text":"Let us now create a figure to plot the emission coordinates on,","category":"page"},{"location":"examples/raytrace/","page":"Raytracing with Minotime","title":"Raytracing with Minotime","text":"fig = Figure(resolution=(600, 600), fontfamily=\"Computer Modern\", fontface=\"bold\");\nnothing #hide","category":"page"},{"location":"examples/raytrace/","page":"Raytracing with Minotime","title":"Raytracing with Minotime","text":"This loop will plot the emission coordinates for each τ.","category":"page"},{"location":"examples/raytrace/","page":"Raytracing with Minotime","title":"Raytracing with Minotime","text":"recording = record(fig, \"raytrace.gif\", range(0,3,length=180),framerate=15) do τ\n    empty!(fig);\n\n    αvals = range(-ρmax, ρmax, length=sze);\n    βvals = range(-ρmax, ρmax, length=sze);\n    tvals = -Inf.*ones(sze, sze);\n    rvals = -Inf.*ones(sze, sze);\n    θvals = -Inf.*ones(sze, sze);\n    ϕvals = -Inf.*ones(sze, sze);\n\n    Threads.@threads for i in 1:sze\n        for j in 1:sze\n            curr_ts, curr_rs, curr_θs, curr_ϕs, νr, νθ = Kang.raytrace(model, αvals[i], βvals[j], θo, τ);\n            tvals[i, j] = (rmax > curr_rs > rmin) ? curr_ts : tvals[i, j];\n            rvals[i, j] = (rmax > curr_rs > rmin) ? curr_rs : rvals[i, j];\n            θvals[i, j] = (rmax > curr_rs > rmin) ? curr_θs : θvals[i, j];\n            ϕvals[i, j] = (rmax > curr_rs > rmin) ? curr_ϕs : ϕvals[i, j];\n\n        end\n    end\n\n    ax0 = Axis(fig[1, 1], aspect=1, title=L\"\\text{Regularized Time} (t_s)\");\n    ax1 = Axis(fig[1, 3], aspect=1, title=L\"\\text{Radius} (r_s)\");\n    ax2 = Axis(fig[2, 1], aspect=1, title=L\"\\text{Opening angle } (\\theta_s)\");\n    ax3 = Axis(fig[2, 3], aspect=1, title=L\"\\text{Azimuth } (\\phi_s)\");\n\n    hm0 = CairoMakie.heatmap!(ax0, αvals, βvals, tvals, colormap=:afmhot, colorrange=(-100,100));\n    cb0 = Colorbar(fig[1, 2], hm0);\n    hm1 = CairoMakie.heatmap!(ax1, αvals, βvals, rvals, colormap=:afmhot, colorrange=(0,20));\n    cb1 = Colorbar(fig[1, 4], hm1);\n    hm2 = CairoMakie.heatmap!(ax2, αvals, βvals, θvals, colormap=:afmhot, colorrange=(0,π));\n    cb2 = Colorbar(fig[2, 2], hm2);\n    hm3 = CairoMakie.heatmap!(ax3, αvals, βvals, ϕvals, colormap=:afmhot, colorrange=(0,2π));\n    cb3 = Colorbar(fig[2, 4], hm3);\n\n    ax4 = Axis(\n        fig[3, 1:3],\n        leftspinevisible=false,\n        rightspinevisible=false,\n        topspinevisible=false,\n        bottomspinevisible=false,\n        height=60,\n    );\n    hidedecorations!(ax4);\n    CairoMakie.text!(ax4, L\"τ=%$τ\", fontsize=30);\nend","category":"page"},{"location":"examples/raytrace/","page":"Raytracing with Minotime","title":"Raytracing with Minotime","text":"(Image: image)","category":"page"},{"location":"examples/raytrace/","page":"Raytracing with Minotime","title":"Raytracing with Minotime","text":"","category":"page"},{"location":"examples/raytrace/","page":"Raytracing with Minotime","title":"Raytracing with Minotime","text":"This page was generated using Literate.jl.","category":"page"}]
}
